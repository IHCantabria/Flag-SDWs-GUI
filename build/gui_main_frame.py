
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
from utils.commands_gui_initialize import *
from utils.commands_gui_main_frame import *

OUTPUT_PATH = Path(__file__).parent
#ASSETS_PATH = OUTPUT_PATH / Path(r"D:\Repos Github\Flag-SDWs-GUI\build\assets\frame0")
ASSETS_PATH = Path.joinpath(OUTPUT_PATH, "assets/frame2")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def on_closing():
    # Display confirmation dialog
    response = messagebox.askyesno("Close Window", "Are you sure you want to close?")
    if response:  # If "Yes" is selected
        print("Closing the window and stopping the program...")
        # Raise an error to stop the mainloop and the program
        raise SystemExit
        
    else: # If "No" is selected, the message box closes automatically (no action needed)
        pass

window = Tk()
window.title("Flag SDWs GUI")
window.geometry("1242x782")
window.configure(bg = "#FFFFFF")
# Set the action when trying to close the window
window.protocol("WM_DELETE_WINDOW", on_closing)

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 782,
    width = 1242,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)
canvas.place(x = 0, y = 0)

# Create a dropdown menu, single selection
global sdw_dropdown
sdw_dropdown = set_sdw_dropdown(canvas)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    163.0,
    272.0,
    image=image_image_1
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    163.0,
    272.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    801.0,
    119.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    798.0,
    364.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    456.0,
    663.0,
    image=image_image_4
)

canvas.create_text(
    63.0,
    18.0,
    anchor="nw",
    text="Select a SDW",
    fill="#4B4B91",
    font=("Verdana", 24 * -1)
)

canvas.create_text(
    388.0,
    18.0,
    anchor="nw",
    text="SDW data",
    fill="#4B4B91",
    font=("Verdana", 18 * -1)
)

canvas.create_text(
    63.0,
    492.0,
    anchor="nw",
    text="Flag SDW Transects",
    fill="#4B4B91",
    font=("Verdana", 24 * -1)
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    37.0,
    33.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    37.0,
    507.0,
    image=image_image_6
)

canvas.create_text(
    388.0,
    202.0,
    anchor="nw",
    text="Metocean data",
    fill="#4B4B91",
    font=("Verdana", 18 * -1)
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    1193.0,
    749.0,
    image=image_image_7
)

# PLOT BUTTON
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: command_plot_button(window, canvas, sdw_dropdown),
    relief="flat"
)
button_1.place(
    x=97.0,
    y=404.0,
    width=133.0,
    height=46.0
)

# SAVE SDW BUTTON
button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: command_save_sdw_button(sdw_dropdown),
    relief="flat"
)
button_2.place(
    x=926.0,
    y=622.0,
    width=130.0,
    height=80.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: command_select_all_button(),
    relief="flat"
)
button_3.place(
    x=185.0,
    y=663.0,
    width=83.0,
    height=27.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: command_deselect_all_button(),
    relief="flat"
)
button_4.place(
    x=185.0,
    y=695.0,
    width=83.0,
    height=27.0
)

canvas.create_text(
    63.0,
    575.0,
    anchor="nw",
    text="Select Transect ID",
    fill="#4B4B91",
    font=("Verdana", 24 * -1)
)

canvas.create_text(
    410.0,
    281.0,
    anchor="nw",
    text="Hs",
    fill="#4B4B91",
    font=("Verdana", 18 * -1)
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    163.0,
    141.0,
    image=image_image_8
)

canvas.create_text(
    722.0,
    281.0,
    anchor="nw",
    text="Tide",
    fill="#4B4B91",
    font=("Verdana", 18 * -1)
)

canvas.create_text(
    1047.0,
    282.0,
    anchor="nw",
    text="Tide state",
    fill="#4B4B91",
    font=("Verdana", 18 * -1)
)

canvas.create_text(
    388.0,
    575.0,
    anchor="nw",
    text="Select the type ",
    fill="#4B4B91",
    font=("Verdana", 24 * -1)
)

canvas.create_text(
    388.0,
    604.0,
    anchor="nw",
    text="of indicator",
    fill="#4B4B91",
    font=("Verdana", 24 * -1)
)

canvas.create_text(
    676.0,
    575.0,
    anchor="nw",
    text="Select the level",
    fill="#4B4B91",
    font=("Verdana", 24 * -1)
)

canvas.create_text(
    678.0,
    604.0,
    anchor="nw",
    text="of confidence",
    fill="#4B4B91",
    font=("Verdana", 24 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    990.5,
    723.0,
    image=entry_image_1
)
entry_1 = Text(
    bd=0,
    bg="#4B4B91",
    fg="#000716",
    highlightthickness=0,
)
entry_1.place(
    x=944.0,
    y=711.0,
    width=93.0,
    height=22.0
)

"""image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    1100.0,
    364.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    1100.0,
    364.0,
    image=image_image_10
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    471.0,
    364.0,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    783.0,
    364.0,
    image=image_image_12
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    176.0,
    692.0,
    image=image_image_13
)

image_image_14 = PhotoImage(
    file=relative_to_assets("image_14.png"))
image_14 = canvas.create_image(
    470.0,
    692.0,
    image=image_image_14
)

image_image_15 = PhotoImage(
    file=relative_to_assets("image_15.png"))
image_15 = canvas.create_image(
    778.0,
    692.0,
    image=image_image_15
)
"""
image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    368.0,
    590.0,
    image=image_image_16
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    43.0,
    590.0,
    image=image_image_17
)

image_image_18 = PhotoImage(
    file=relative_to_assets("image_18.png"))
image_18 = canvas.create_image(
    656.0,
    590.0,
    image=image_image_18
)
window.resizable(False, False)
window.mainloop()