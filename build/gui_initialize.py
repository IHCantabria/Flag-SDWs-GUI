
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
from utils.commands_gui_initialize import select_folder, select_csv_file, start_button

OUTPUT_PATH = Path(__file__).parent
#ASSETS_PATH = OUTPUT_PATH / Path(r"D:\Repos Github\Flag-SDWs-GUI\build\assets\frame0")
ASSETS_PATH = Path.joinpath(OUTPUT_PATH, "assets/frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def on_closing():
    # Display confirmation dialog
    response = messagebox.askyesno("Close Window", "Are you sure you want to close?")
    if response:  # If "Yes" is selected
        print("Closing the window and stopping the program...")
        # Raise an error to stop the mainloop and the program
        raise SystemExit
        
    else: # If "No" is selected, the message box closes automatically (no action needed)
        pass    

window = Tk()
window.title("Flag SDWs GUI")
window.geometry("688x410")
window.configure(bg = "#FFFFFF")
# Set the action when trying to close the window
window.protocol("WM_DELETE_WINDOW", on_closing)

# Dictionary to store the selected folder/file paths
# The keys are the button IDs and the values are the selected folder/file paths
in_files = {}

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 410,
    width = 688,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)

# SDW FC ENTRY
entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    352.0,
    202.5,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#C8C8C8",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=291.0,
    y=194.0,
    width=122.0,
    height=15.0
)

canvas.create_text(
    278.0,
    26.0,
    anchor="nw",
    text="Select the folder where the RGB files are stored:",
    fill="#4B4B91",
    font=("Verdana", 16 * -1)
)

canvas.create_text(
    278.0,
    107.0,
    anchor="nw",
    text="Select the File GDB (.gdb):",
    fill="#4B4B91",
    font=("Verdana", 16 * -1)
)

canvas.create_text(
    287.0,
    174.0,
    anchor="nw",
    text="Enter the SDW Feature Class (line) name:",
    fill="#4B4B91",
    font=("Verdana", 12 * -1)
)

# TRANSECTS FC ENTRY
entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    352.0,
    247.5,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#C8C8C8",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=291.0,
    y=239.0,
    width=122.0,
    height=15.0
)

canvas.create_text(
    287.0,
    219.0,
    anchor="nw",
    text="Enter the Transects Feature Class name:",
    fill="#4B4B91",
    font=("Verdana", 12 * -1)
)

canvas.create_text(
    278.0,
    286.0,
    anchor="nw",
    text="Select the metocean time series CSV file:",
    fill="#4B4B91",
    font=("Verdana", 16 * -1)
)

canvas.create_rectangle(
    0.0,
    0.0,
    242.0,
    410.0,
    fill="#F7F0CE",
    outline="")

canvas.create_text(
    10.0,
    139.0,
    anchor="nw",
    text="Flag SDWs",
    fill="#4B4B91",
    font=("Verdana", 38 * -1)
)

canvas.create_text(
    10.0,
    194.0,
    anchor="nw",
    text="GUI",
    fill="#4B4B91",
    font=("Verdana", 38 * -1)
)

# START BUTTON
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: start_button([entry_1, entry_2], in_files, window),
    relief="flat"
)
button_1.place(
    x=421.0,
    y=367.0,
    width=100.0,
    height=32.0
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    203.0,
    384.0,
    image=image_image_1
)

# METOCEAN CSV BUTTON
button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: select_csv_file(in_files, 2),
    relief="flat"
)
button_2.place(
    x=291.0,
    y=313.0,
    width=65.0,
    height=25.0
)

# FILE GDB BUTTON
button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: select_folder(in_files, 3),
    relief="flat"
)
button_3.place(
    x=291.0,
    y=135.0,
    width=65.0,
    height=25.0
)

# RGB FOLDER BUTTON
button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: select_folder(in_files, 4),
    relief="flat"
)
button_4.place(
    x=291.0,
    y=53.0,
    width=65.0,
    height=25.0
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    265.0,
    22.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    265.0,
    104.0,
    image=image_image_3
)

canvas.create_rectangle(
    250.0,
    356.0,
    668.0011901855469,
    359.0,
    fill="#DEBF33",
    outline="")

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    265.0,
    283.0,
    image=image_image_4
)
window.resizable(False, False)
window.mainloop()
